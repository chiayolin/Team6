# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: [push, pull_request, workflow_dispatch]

defaults:
  run:
    working-directory: Projects/P4/

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Compile src files
        run: |
          javac -cp "src/" src/*.java

  pacmanconsume:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Compile and run PacMan's consume() test
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestConsume
  
  ghostattack:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Compile and run Ghost's attack() test
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestAttack

  mapeatcookie:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Compile and run Map's eatCookie test
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapEatCookie

        